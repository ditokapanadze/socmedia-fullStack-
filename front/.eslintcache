[{"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\index.js":"1","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\App.js":"2","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\reducers\\index.js":"3","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\styles.js":"4","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\actions\\posts.js":"5","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Form\\Form.js":"6","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Posts\\Posts.js":"7","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Navbar\\Navbar.js":"8","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\home\\Home.js":"9","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Auth\\Auth.js":"10","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\PostDetails\\PostDetails.js":"11","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Pagination.js":"12","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\reducers\\auth.js":"13","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\reducers\\posts.js":"14","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Form\\styles.js":"15","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Posts\\styles.js":"16","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Navbar\\style.js":"17","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Auth\\style.js":"18","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\home\\styles.js":"19","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Auth\\icon.js":"20","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Auth\\Input.js":"21","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\actions\\auth.js":"22","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\constants\\actionTypes.js":"23","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Posts\\Post\\Post.js":"24","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\styles.js":"25","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\api\\index.js":"26","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Posts\\Post\\styles.js":"27","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\PostDetails\\style.js":"28"},{"size":533,"mtime":1622657809000,"results":"29","hashOfConfig":"30"},{"size":1338,"mtime":1622657809000,"results":"31","hashOfConfig":"30"},{"size":152,"mtime":1622657809000,"results":"32","hashOfConfig":"30"},{"size":464,"mtime":1622657809000,"results":"33","hashOfConfig":"30"},{"size":2770,"mtime":1623404789954,"results":"34","hashOfConfig":"30"},{"size":3897,"mtime":1623316287568,"results":"35","hashOfConfig":"30"},{"size":812,"mtime":1623401575141,"results":"36","hashOfConfig":"30"},{"size":2616,"mtime":1623309248557,"results":"37","hashOfConfig":"30"},{"size":3340,"mtime":1623402222199,"results":"38","hashOfConfig":"30"},{"size":4682,"mtime":1622657809000,"results":"39","hashOfConfig":"30"},{"size":3948,"mtime":1623400829816,"results":"40","hashOfConfig":"30"},{"size":948,"mtime":1623315783582,"results":"41","hashOfConfig":"30"},{"size":446,"mtime":1622657809000,"results":"42","hashOfConfig":"30"},{"size":1461,"mtime":1623401088758,"results":"43","hashOfConfig":"30"},{"size":451,"mtime":1623316323210,"results":"44","hashOfConfig":"30"},{"size":266,"mtime":1622657809000,"results":"45","hashOfConfig":"30"},{"size":937,"mtime":1622657809000,"results":"46","hashOfConfig":"30"},{"size":638,"mtime":1622657809000,"results":"47","hashOfConfig":"30"},{"size":407,"mtime":1622657809000,"results":"48","hashOfConfig":"30"},{"size":502,"mtime":1622657809000,"results":"49","hashOfConfig":"30"},{"size":1007,"mtime":1622657809000,"results":"50","hashOfConfig":"30"},{"size":549,"mtime":1622657809000,"results":"51","hashOfConfig":"30"},{"size":403,"mtime":1623400684440,"results":"52","hashOfConfig":"30"},{"size":3930,"mtime":1623336655054,"results":"53","hashOfConfig":"30"},{"size":145,"mtime":1622657809000,"results":"54","hashOfConfig":"30"},{"size":1247,"mtime":1623423210691,"results":"55","hashOfConfig":"30"},{"size":1032,"mtime":1623308120768,"results":"56","hashOfConfig":"30"},{"size":889,"mtime":1623336937455,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"wj9ct7",{"filePath":"61","messages":"62","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\index.js",[],["122","123"],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\App.js",["124","125","126","127","128","129","130","131","132","133","134","135"],"import React, { useEffect, useState } from \"react\";\n\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport Posts from \"./components/Posts/Posts\";\nimport Form from \"./components/Form/Form\";\nimport useStyles from \"./styles\";\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from \"./actions/posts\";\nimport { useSelector } from \"react-redux\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from \"./components/home/Home\";\nimport Auth from \"./components/Auth/Auth\";\nimport PostDetails from \"./components/PostDetails/PostDetails\";\n\nfunction App() {\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  return (\n    <Router>\n      <Container maxWidth=\"xl\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={() => <Redirect to=\"/posts\" />} />\n          <Route path=\"/posts\" exact component={Home} />\n          <Route path=\"/posts/search\" exact component={Home} />\n          <Route path=\"/posts/:id\" component={PostDetails} />\n          <Route\n            path=\"/auth\"\n            exact\n            component={() => (!user ? <Auth /> : <Redirect to=\"/posts\" />)}\n          />\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\reducers\\index.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\styles.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\actions\\posts.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Form\\Form.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Navbar\\Navbar.js",["136","137"],"import React, { useState, useEffect } from \"react\";\nimport { AppBar, Button, Toolbar, Typography, Avatar } from \"@material-ui/core\";\nimport useStyles from \"./style\";\nimport memories from \"../../img/memories.png\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport decode from \"jwt-decode\";\nimport memoriesLogo from \"../../img/memories-Logo.png\";\nimport memoriesText from \"../../img/memories-Text.png\";\n\nfunction Navbar() {\n  const classes = useStyles();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  // useEffect(() => {\n  //   let token;\n  //   user ? (token = user.token) : \"\";\n  //   if (token) {\n  //     const decodeToken = decode(token);\n  //     if (decodeToken.exp * 1000 < new Date().getTime()) {\n  //       logOut();\n  //     }\n  //   }\n  // }, []);\n  const logOut = () => {\n    setUser(null);\n    dispatch({ type: \"LOGOUT\" });\n    history.push(\"/\");\n  };\n  console.log(\"test2\");\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <div className={classes.brandContainer}>\n        <Link to=\"/\" className={classes.brandContainer}>\n          {\" \"}\n          <img\n            className={classes.image}\n            src={memoriesLogo}\n            alt=\"icon\"\n            height=\"45px\"\n          />\n          <img src={memoriesText} alt=\"icon\" height=\"40px\" />\n        </Link>\n      </div>\n      <Toolbar className={classes.toolbar}>\n        {user ? (\n          <div className={classes.profile}>\n            <Avatar\n              src={user.result.imageUrl}\n              className={classes.purple}\n              alt={user.result.name}\n            >\n              {user.result.name.charAt(0)}\n            </Avatar>\n            <Typography className={classes.userName} variant=\"h6\">\n              {user.result.name}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              className={classes.logout}\n              color=\"secondary\"\n              onClick={logOut}\n            >\n              Logout\n            </Button>\n          </div>\n        ) : (\n          <Button\n            component={Link}\n            to=\"/auth\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            SIGN IN\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Navbar;\n","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\home\\Home.js",["138","139","140","141","142","143"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Grow,\n  Grid,\n  Paper,\n  AppBar,\n  TextField,\n  Button,\n  Chip,\n} from \"@material-ui/core\";\nimport ChipInput from \"material-ui-chip-input\";\nimport axios from \"axios\";\nimport Posts from \"../Posts/Posts\";\nimport Form from \"../Form/Form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts, getPostsBySearch } from \"../../actions/posts\";\nimport Pagination from \"../Pagination.js\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction Home() {\n  const [currentId, setCurrentId] = useState(null);\n  const query = useQuery();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const page = query.get(\"page\") || 1;\n\n  const searchQuery = query.get(\"searchQuery\");\n\n  const posts = useSelector((state) => state.posts);\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [tags, setTags] = useState([]);\n\n  const searchPost = () => {\n    console.log(\"cv\");\n    if (search.trim() || tags) {\n      console.log(tags.join(\",\"));\n      dispatch(getPostsBySearch({ search, tags: tags.join(\",\") }));\n      history.push(\n        `/posts/search?searchQuery=${search || \"none\"}&tags=${tags.join(\",\")}`\n      );\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      searchPost();\n    }\n  };\n\n  const handleAdd = (tag) => {\n    setTags([...tags, tag]);\n  };\n  const handleDelete = (tagToDelete) => {\n    setTags(tags.filter((tag) => tag !== tagToDelete));\n  };\n  console.log(tags);\n  return (\n    <Grow in>\n      <Container maxWidth=\"xl\">\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"stretch\"\n          spacing={3}\n          className={classes.gridContainer}\n        >\n          <Grid item xs={12} sm={5} md={9}>\n            <Posts setCurrentId={setCurrentId} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <AppBar\n              className={classes.appBarSearch}\n              position=\"static\"\n              color=\"inherit\"\n            >\n              <TextField\n                name=\"search\"\n                variant=\"outlined\"\n                label=\"Search Memories\"\n                fullWidth\n                onKeyPress={handleKeyPress}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n\n              <ChipInput\n                onAdd={handleAdd}\n                onDelete={handleDelete}\n                label=\"Search tags\"\n                variant=\"outlined\"\n                value={tags}\n                style={{ margin: \"10px 0\" }}\n              />\n              <Button\n                onClick={searchPost}\n                className={classes.searchButton}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Search\n              </Button>\n            </AppBar>\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\n            <Paper elevation={6}>\n              {}\n              <Pagination page={page} />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  );\n}\n\nexport default Home;\n","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Auth\\Auth.js",["144","145"],"import React, { useState } from \"react\";\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n  TextField,\n} from \"@material-ui/core\";\nimport Icon from \"./icon\";\nimport { GoogleLogin } from \"react-google-login\";\nimport useStyles from \"./style\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOpenOutlined\";\nimport Input from \"./Input\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signin, signup } from \"../../actions/auth\";\nfunction Auth() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [isSignup, setIsSignup] = useState(false);\n  let history = useHistory();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const initialState = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  const [fomrData, setFormData] = useState(initialState);\n\n  const handleChange = (e) => {\n    setFormData({ ...fomrData, [e.target.name]: e.target.value });\n  };\n\n  const handleShowPassword = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  const switchMode = (e) => {\n    e.preventDefault();\n    setIsSignup(!isSignup);\n    setShowPassword(false);\n  };\n\n  const HandleSubmit = (e) => {\n    e.preventDefault();\n    if (isSignup) {\n      dispatch(signup(fomrData, history));\n    } else {\n      dispatch(signin(fomrData, history));\n    }\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res.profileObj;\n    const token = res.tokenId;\n    try {\n      dispatch({ type: \"AUTH\", data: { result, token } });\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const googleFailure = (error) => {\n    console.log(\"Google Sign in was unsuccessful.\");\n    console.log(error);\n  };\n\n  return (\n    <Container component=\"main\" maxwidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{isSignup ? \"Sign Up\" : \"Sign In\"}</Typography>\n        <form className={classes.from} onSubmit={HandleSubmit}>\n          <Grid container className=\"test\" spacing={2}>\n            {isSignup && (\n              <React.Fragment>\n                <Input\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                />\n\n                <Input\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  handleChange={handleChange}\n                  half\n                />\n              </React.Fragment>\n            )}\n            <Input\n              name=\"email\"\n              label=\"Email Address\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <Input\n              name=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              type={showPassword ? \"text\" : \"password\"}\n              handleShowPassword={handleShowPassword}\n            />\n            {isSignup && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Repeat Password\"\n                handleChange={handleChange}\n                type=\"password\"\n              />\n            )}\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\n          </Button>\n          <GoogleLogin\n            clientId=\"420211506123-adthmhdoge7ermp04b74vpeoamugaigr.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                color=\"primary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                className={classes.googleButton}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant=\"contained\"\n              >\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                {isSignup\n                  ? \"Already have an acount? Sign In\"\n                  : \"Don't have an acount? Sign Up\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default Auth;\n","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\PostDetails\\PostDetails.js",["146","147","148"],"import React, { useEffect } from \"react\";\nimport {\n  Paper,\n  Typography,\n  CircularProgress,\n  Divider,\n} from \"@material-ui/core/\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { getPost, getPostsBySearch } from \"../../actions/posts\";\nimport useStyles from \"./style\";\n\nconst Post = () => {\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n\n  useEffect(() => {\n    if (post) {\n      dispatch(\n        getPostsBySearch({ search: \"none\", tags: post?.tags.join(\",\") })\n      );\n    }\n  }, [post]);\n  console.log(isLoading);\n  if (!post) return null;\n\n  const openPost = (_id) => history.push(`/posts/${_id}`);\n\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size=\"7em\" />\n      </Paper>\n    );\n  }\n\n  const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n  return (\n    <Paper style={{ padding: \"20px\", borderRadius: \"15px\" }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"h6\"\n            color=\"textSecondary\"\n            component=\"h2\"\n          >\n            {post.tags.map((tag) => `#${tag} `)}\n          </Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">\n            {post.message}\n          </Typography>\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\n          <Typography variant=\"body1\">\n            {moment(post.createdAt).fromNow()}\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <Typography variant=\"body1\">\n            <strong>Realtime Chat - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <Typography variant=\"body1\">\n            <strong>Comments - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img\n            className={classes.media}\n            src={\n              post.selectedFile ||\n              \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n            }\n            alt={post.title}\n          />\n        </div>\n      </div>\n      {!!recommendedPosts.length && (\n        <div className={classes.section}>\n          <Typography gutterBottom variant=\"h5\">\n            You might also like:\n          </Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(\n              ({ title, name, message, likes, selectedFile, _id }) => (\n                <div\n                  style={{ margin: \"20px\", cursor: \"pointer\" }}\n                  onClick={() => openPost(_id)}\n                  key={_id}\n                >\n                  <Typography gutterBottom variant=\"h6\">\n                    {title}\n                  </Typography>\n                  <Typography gutterBottom variant=\"subtitle2\">\n                    {name}\n                  </Typography>\n                  <Typography gutterBottom variant=\"subtitle2\">\n                    {message}\n                  </Typography>\n                  <Typography gutterBottom variant=\"subtitle1\">\n                    Likes: {likes.length}\n                  </Typography>\n                  <img src={selectedFile} width=\"200px\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      )}\n    </Paper>\n  );\n};\n\nexport default Post;\n","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Pagination.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\reducers\\auth.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\reducers\\posts.js",["149"],"import {\n  FETCH_ALL,\n  UPDATE,\n  CREATE,\n  DELETE,\n  FETCH_BY_SEARCH,\n  START_LOADING,\n  END_LOADING,\n  LIKE,\n  FETCH_POST,\n} from \"../constants/actionTypes\";\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n    case END_LOADING:\n      console.log(\"dailoga\");\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_POST:\n      return { ...state, post: action.payload };\n    case FETCH_BY_SEARCH:\n      return { ...state, posts: action.payload.data };\n    // case FETCH_POST:\n    //   return { ...state, post: action.payload.post };\n    case LIKE:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === action.payload._id ? action.payload : post\n        ),\n      };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === action.payload._id ? action.payload : post\n        ),\n      };\n    case DELETE:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Form\\styles.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Posts\\styles.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Navbar\\style.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Auth\\style.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\home\\styles.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Auth\\icon.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Auth\\Input.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\actions\\auth.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\constants\\actionTypes.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Posts\\Post\\Post.js",["150"],"import React from \"react\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  cardMedia,\n  Button,\n  Typography,\n  CardMedia,\n  ButtonBase,\n} from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { deletePost, likePost } from \"../../../actions/posts\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Post({ post, setCurrentId }) {\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // console.log(user.result.googleId);\n  // console.log(post.creator);\n  const Likes = () => {\n    if (post.likes.length > 0) {\n      return post.likes.find(\n        (like) => user && like === (user.result.googleId || user.result._id)\n      ) ? (\n        <React.Fragment>\n          <ThumbUpAltIcon fontSize=\"small\" />\n          &nbsp;\n          {post.likes.length > 2\n            ? `You and ${post.likes.length - 1} others`\n            : `${post.likes.length} like${post.likes.length > 1 ? \"s\" : \"\"}`}\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <ThumbUpAltOutlined fontSize=\"small\" />\n          &nbsp;{post.likes.length} {post.likes.length === 1 ? \"Like\" : \"Likes\"}\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ThumbUpAltOutlined fontSize=\"small\" />\n        &nbsp;Like\n      </React.Fragment>\n    );\n  };\n\n  const openPost = () => history.push(`/posts/${post._id}`);\n\n  return (\n    <Card className={classes.card} raised elevation={6}>\n      <ButtonBase className={classes.cardAction} onClick={openPost}>\n        <CardMedia\n          className={classes.media}\n          image={post.selectedFile}\n          title={post.title}\n        ></CardMedia>\n        <div className={classes.overlay}>\n          <Typography variant=\"h6\">{post.name}</Typography>\n          <Typography variant=\"body2\">\n            {moment(post.createdAt).fromNow()}\n          </Typography>\n        </div>\n        <div className={classes.overlay2}>\n          {(user?.result.googleId === post.creator ||\n            user?.result._id === post.creator) && (\n            <button\n              className=\"edit__btn\"\n              style={{ color: \"white\" }}\n              size=\"small\"\n              onClick={() => setCurrentId(post._id)}\n            >\n              <MoreHorizIcon fontSize=\"default\" />\n            </button>\n          )}\n        </div>\n        <div className={classes.details}>\n          <Typography variant=\"body26\" color=\"textSecondary\">\n            {post.tags.map((tag) => `#${tag} `)}\n          </Typography>\n        </div>\n        <Typography className={classes.title} variant=\"h5\" gutterBottom>\n          {post.title}\n        </Typography>\n        <CardContent>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            gutterBottom\n          >\n            {post.message}\n          </Typography>\n        </CardContent>\n      </ButtonBase>\n      <CardActions className={classes.cardActions}>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          disabled={!user}\n          onClick={() => dispatch(likePost(post._id))}\n        >\n          <Likes />\n        </Button>\n        {(user?.result.googleId === post.creator ||\n          user?.result._id === post.creator) && (\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => dispatch(deletePost(post._id))}\n          >\n            <DeleteIcon fontSize=\"small\" />\n            Delete\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default Post;\n","C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\styles.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\api\\index.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\dito\\Desktop\\socmedia-fullStack--main\\socmedia-fullStack--main\\front\\src\\components\\PostDetails\\style.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":26},{"ruleId":"155","severity":1,"message":"159","line":1,"column":28,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"160","line":3,"column":21,"nodeType":"157","messageId":"158","endLine":3,"endColumn":27},{"ruleId":"155","severity":1,"message":"161","line":3,"column":29,"nodeType":"157","messageId":"158","endLine":3,"endColumn":39},{"ruleId":"155","severity":1,"message":"162","line":3,"column":41,"nodeType":"157","messageId":"158","endLine":3,"endColumn":45},{"ruleId":"155","severity":1,"message":"163","line":3,"column":47,"nodeType":"157","messageId":"158","endLine":3,"endColumn":51},{"ruleId":"155","severity":1,"message":"164","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":13},{"ruleId":"155","severity":1,"message":"165","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":12},{"ruleId":"155","severity":1,"message":"166","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":17},{"ruleId":"155","severity":1,"message":"167","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":21},{"ruleId":"155","severity":1,"message":"168","line":8,"column":10,"nodeType":"157","messageId":"158","endLine":8,"endColumn":18},{"ruleId":"155","severity":1,"message":"169","line":9,"column":10,"nodeType":"157","messageId":"158","endLine":9,"endColumn":21},{"ruleId":"155","severity":1,"message":"170","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":16},{"ruleId":"155","severity":1,"message":"171","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"172","line":10,"column":3,"nodeType":"157","messageId":"158","endLine":10,"endColumn":7},{"ruleId":"155","severity":1,"message":"173","line":13,"column":8,"nodeType":"157","messageId":"158","endLine":13,"endColumn":13},{"ruleId":"155","severity":1,"message":"168","line":17,"column":10,"nodeType":"157","messageId":"158","endLine":17,"endColumn":18},{"ruleId":"155","severity":1,"message":"174","line":33,"column":9,"nodeType":"157","messageId":"158","endLine":33,"endColumn":20},{"ruleId":"155","severity":1,"message":"175","line":35,"column":9,"nodeType":"157","messageId":"158","endLine":35,"endColumn":14},{"ruleId":"155","severity":1,"message":"176","line":9,"column":3,"nodeType":"157","messageId":"158","endLine":9,"endColumn":12},{"ruleId":"155","severity":1,"message":"169","line":17,"column":23,"nodeType":"157","messageId":"158","endLine":17,"endColumn":34},{"ruleId":"177","severity":1,"message":"178","line":24,"column":6,"nodeType":"179","endLine":24,"endColumn":10,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"178","line":32,"column":6,"nodeType":"179","endLine":32,"endColumn":12,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":117,"column":19,"nodeType":"184","endLine":117,"endColumn":59},{"ruleId":"185","severity":1,"message":"186","line":12,"column":1,"nodeType":"187","endLine":56,"endColumn":3},{"ruleId":"155","severity":1,"message":"188","line":6,"column":3,"nodeType":"157","messageId":"158","endLine":6,"endColumn":12},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'AppBar' is defined but never used.","'Typography' is defined but never used.","'Grow' is defined but never used.","'Grid' is defined but never used.","'Posts' is defined but never used.","'Form' is defined but never used.","'useStyles' is defined but never used.","'useDispatch' is defined but never used.","'getPosts' is defined but never used.","'useSelector' is defined but never used.","'memories' is defined but never used.","'decode' is defined but never used.","'Chip' is defined but never used.","'axios' is defined but never used.","'searchQuery' is assigned a value but never used.","'posts' is assigned a value but never used.","'TextField' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["191"],["192"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'cardMedia' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [dispatch, id]",{"range":"197","text":"198"},"Update the dependencies array to be: [dispatch, post]",{"range":"199","text":"200"},[652,656],"[dispatch, id]",[805,811],"[dispatch, post]"]